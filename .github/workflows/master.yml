# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ devel ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

      - name: Create SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Create the release folder on the server
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'mkdir /var/www/pullcrm.com/strapi/versions/release-${{ steps.date.outputs.date }}'

      - name: Upload files to the server
        run: rsync -r ./ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:'/var/www/pullcrm.com/strapi/versions/release-${{ steps.date.outputs.date }}'

      - name: Link the release folder on the server
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'rm /var/www/pullcrm.com/strapi/release && ln -s /var/www/pullcrm.com/strapi/versions/release-${{ steps.date.outputs.date }} /var/www/pullcrm.com/strapi/release'

      - name: Link the public folder on the server
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'rm -rf /var/www/pullcrm.com/strapi/release/public/uploads && ln -s /var/www/pullcrm.com/strapi/uploads /var/www/pullcrm.com/strapi/release/public/uploads'

      - name: Copy .env file to project
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cp /var/www/pullcrm.com/strapi/.env /var/www/pullcrm.com/strapi/release/.env'

      - name: Copy 'ecosystem.config.js' file to project
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cp /var/www/pullcrm.com/strapi/ecosystem.config.js /var/www/pullcrm.com/strapi/release/ecosystem.config.js'

      - name: Delete old versions of project
        run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd /var/www/pullcrm.com/strapi/versions && rm -rf `ls -t | tail -n +6`'

      # - name: Install modules and build project
      #   run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'source ~/.nvm/nvm.sh && nvm use 16 && cd /var/www/pullcrm.com/strapi/release && npm install && npm run build'

      # - name: Stop project
      #   run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'source ~/.nvm/nvm.sh && pm2 stop /var/www/pullcrm.com/strapi/app/ecosystem.config.js'

      # - name: Update server project
      #   run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd /var/www/pullcrm.com/strapi/app && git pull && yarn install && yarn build'

      # - name: Reload project
      #   run: ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'source ~/.nvm/nvm.sh && pm2 startOrReload /var/www/pullcrm.com/strapi/app/ecosystem.config.js'

      # - name: Slack Notify
      #   if: always()
      #   uses: rtCamp/action-slack-notify@v2.2.0
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_COLOR: ${{ job.status }}
      #     SLACK_USERNAME: Autodeploy STRAPI
